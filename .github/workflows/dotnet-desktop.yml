name: Build and Deploy .NET Microservice

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOTNET_VERSION: "8.0"
  BUILD_CONFIGURATION: "Release"

jobs:
  docker-build-and-push:
    name: Docker Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: https://docker.levino.ir
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.levino.ir/identity-service:${{ github.sha }}
          build-args: |
            docker build \
            --build-arg BUILD_CONFIGURATION=${{ env.BUILD_CONFIGURATION }} \
            -t ${{ secrets.DOCKER_USERNAME }}/identity-service:${{ github.sha }} .

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 2054
          script: |
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker pull localhost:2525/identity-service:${{ github.sha }}
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker stop identity-service || true
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker rm identity-service || true
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker run -d --name identity-service -p 7132:7132 -v ./Shared/Protos:/src/Shared/Protos:ro -v /home/mehran/auth/images:/app/wwwroot/images localhost:2525/identity-service:${{ github.sha }}

            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker exec -u root post-service chown app -R /app/wwwroot/

            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker network create --driver bridge gateway
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker network connect gateway identity-service
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker network create --driver bridge redis
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker network connect redis identity-service
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker network create --driver bridge sql-server
            echo ${{ secrets.SERVER_PASSWORD }} | sudo -S docker network connect sql-server identity-service
